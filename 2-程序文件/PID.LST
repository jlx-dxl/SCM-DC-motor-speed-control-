C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE PID
OBJECT MODULE PLACED IN PID.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe D:\4WISD\单片机直流电机转速控制（数码管显示、独立按键控制正反转、停止、开始
                    -、PID算法）【仿真+程序】 - 试用\单片机直流电机转速控制（数码管显示、独立按键控制正反转、停止、开始、PID算法）【仿真+程序
                    -】 - 试用\2-程序文件\PID.C ROM(SMALL) BROWSE DEBUG CODE OBJECTEXTEND PREPRINT OBJECT(PID.OBJ)

stmt level    source

   1          #include<reg52.h>
   2          #include<stdio.h>
   3          #define uchar unsigned char 
   4          #define uint unsigned int
   5          #define THC0 0xf9
   6          #define TLC0 0x0f   //2ms
   7          unsigned char  code Duan[]={0x3F, 0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};//共阴极数码管，0-9段码表
   8          unsigned char  Data_Buffer[8]={0,0,0,0,0,0,0,0};                         //     显示缓冲
   9           
  10          uchar i=0;
  11          sbit AddSpeed=P1^1;
  12          sbit SubSpeed=P1^2;
  13          sbit TurnForward=P1^3;
  14          sbit TurnBackward=P1^4;
  15          sbit Stop=P1^5;
  16          
  17          sbit IN1=P3^0;
  18          sbit IN2=P3^1;
  19          sbit PWM_FC=P1^0;
  20          int e ,e1 ,e2 ;
  21          float uk ,uk1 ,duk ;//pid输出值
  22          float Kp=15,Ki=12,Kd=1.6;
  23          int out=0;
  24          uint SpeedSet=380;
  25          uint cnt=0;
  26          uint Inpluse=0,num=0;//脉冲计数
  27          uint PWMTime=100;//脉冲宽度
  28          unsigned char  arry[];
  29          void SendString(uint ch);
  30          void PIDControl();
  31          void SystemInit();
  32          void delay(uchar x);
  33          void PWMOUT();
  34          void SetSpeed();
  35          void SegRefre();
  36          /**************主函数************/
  37          void main()
  38          {
  39   1              SystemInit();
  40   1              while(1)
  41   1              {
  42   2                      SetSpeed();             //按键设定速度
  43   2                      SegRefre();             //数码管显示刷新
  44   2                      PWMOUT();               //输出PWM
  45   2       
  46   2              }
  47   1      }
  48          
  49          void PIDControl()        //pid偏差计算
  50          {
  51   1              e=SpeedSet-num;          
  52   1              duk=(Kp*(e-e1)+Ki*e+Kd*(e-2*e1+e2))/50;       
  53   1              uk=uk1+duk;         
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 2   

  54   1              out=(int)uk;   //输出为占空比
  55   1              if(out>1000)
  56   1              {
  57   2                      out=1000;
  58   2              }
  59   1              else if(out<0)
  60   1              {
  61   2                      out=0;
  62   2              }
  63   1              uk1=uk;                           //变量值移位
  64   1              e2=e1;
  65   1              e1=e;                             
  66   1              PWMTime=out;
  67   1      }
  68          
  69          void delay(uchar x)
  70          {
  71   1              uint i,j;
  72   1              for(i=x;i>0;i--)
  73   1                      for(j=50;j>0;j--);
  74   1      }
  75          
  76          void PWMOUT()             
  77          {
  78   1              if(cnt<PWMTime)        
  79   1              {
  80   2                      PWM_FC=1;
  81   2              }
  82   1              else
  83   1              {
  84   2                      PWM_FC=0;
  85   2              }
  86   1              if(cnt>1000) cnt=0;      
  87   1      }
  88          void SystemInit()
  89          {
  90   1              TMOD=0X21;     
  91   1              TH0=THC0;
  92   1              TL0=TLC0;
  93   1              TH1=0xC0;
  94   1              TL1=0XC0;
  95   1              ET1=1;
  96   1              ET0=1;
  97   1              TR0=1;
  98   1              TR1=1;
  99   1              EX0=1;     
 100   1              IT0=1;
 101   1              EA=1;
 102   1              e =0;           
 103   1              e1=0;
 104   1              e2=0;
 105   1              IN1 = 1;
 106   1              IN2 = 0;
 107   1      }
 108          void SetSpeed()
 109          {
 110   1              if(AddSpeed==0)
 111   1              {
 112   2                      delay(200);                       //消抖处理
 113   2                      if(AddSpeed==0)
 114   2                      {
 115   3                              SpeedSet+=10;
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 3   

 116   3                              if(SpeedSet>1500)
 117   3                              {
 118   4                                      SpeedSet=1500;
 119   4                              }
 120   3                      }
 121   2              }
 122   1              if(SubSpeed==0)
 123   1              {
 124   2                      delay(200);
 125   2                      if(SubSpeed==0)
 126   2                      {
 127   3                              SpeedSet-=10;
 128   3                              if(SpeedSet<0) SpeedSet=0;
 129   3                      }
 130   2              }
 131   1              if(TurnForward==0)
 132   1              {
 133   2                      delay(200);
 134   2                      if(TurnForward==0)
 135   2                      {
 136   3                         IN1 = 1;
 137   3                         IN2 = 0;
 138   3                         while(TurnForward==0);
 139   3                      }
 140   2              }
 141   1              if(TurnBackward==0)
 142   1              {
 143   2                      delay(200);
 144   2                      if(TurnBackward==0)
 145   2                      {
 146   3                         IN1 = 0;
 147   3                         IN2 = 1;
 148   3                         while(TurnBackward==0);
 149   3                      }
 150   2              }
 151   1              if(Stop==0)
 152   1              {
 153   2                      delay(200);
 154   2                      if(Stop==0)
 155   2                      {
 156   3                         IN1 = 1;
 157   3                         IN2 = 1;
 158   3                         while(Stop==0);
 159   3                      }
 160   2              }
 161   1      
 162   1      }
 163          void SegRefre()           //显示刷新
 164          {
 165   1               Data_Buffer[0]=SpeedSet/1000;            //分离设定值各位
 166   1               Data_Buffer[1]=SpeedSet%1000/100;
 167   1               Data_Buffer[2]=SpeedSet%100/10;
 168   1               Data_Buffer[3]=SpeedSet%10;
 169   1               Data_Buffer[4]=num/1000;                        
 170   1               Data_Buffer[5]=num%1000/100;
 171   1               Data_Buffer[6]=num%100/10;
 172   1               Data_Buffer[7]=num%10;
 173   1      }
 174          
 175          void int0() interrupt 0
 176          {
 177   1              Inpluse++;                  //采集外部脉冲
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 4   

 178   1      }
 179          void t0() interrupt 1
 180          {
 181   1              static unsigned char Bit=0;
 182   1              static unsigned int time=0;
 183   1              TH0=THC0;
 184   1              TL0=TLC0;
 185   1      
 186   1       
 187   1              Bit++;
 188   1              time++;  //转速测量周期
 189   1              if(Bit>8) Bit=0;                  
 190   1              P0=0xff;
 191   1              P2=Duan[Data_Buffer[Bit]];      //显示段码
 192   1              switch(Bit)                                     //数码管位选
 193   1              {
 194   2                      case 0:P0=0X7F;break;
 195   2                      case 1:P0=0XBF;break;
 196   2                      case 2:P0=0XDF;break;
 197   2                      case 3:P0=0XEF;break;
 198   2                      case 4:P0=0XF7;break;
 199   2                      case 5:P0=0XFB;break;
 200   2                      case 6:P0=0XFD;break;
 201   2                      case 7:P0=0XFE;break;
 202   2              }
 203   1              if(time>100)
 204   1              {
 205   2                      time=0;
 206   2                      num=Inpluse*5;             
 207   2                      Inpluse=0;                         
 208   2                      PIDControl();              
 209   2              }
 210   1      }
 211          void timer_1()  interrupt 3
 212          {
 213   1              cnt++;  //cnt越大占空比越高2.5Khz
 214   1      }
 215            
 216          
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0000 1100        R     ACALL   SystemInit
0002         ?C0001:
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
0002 1100        R     ACALL   SetSpeed
                                           ; SOURCE LINE # 43
0004 1100        R     ACALL   SegRefre
                                           ; SOURCE LINE # 44
0006 1100        R     ACALL   PWMOUT
                                           ; SOURCE LINE # 46
0008 80F8              SJMP    ?C0001
             ; FUNCTION main (END)

             ; FUNCTION PIDControl (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 C3                CLR     C
0001 E500        R     MOV     A,SpeedSet+01H
0003 9500        R     SUBB    A,num+01H
0005 F500        R     MOV     e+01H,A
0007 E500        R     MOV     A,SpeedSet
0009 9500        R     SUBB    A,num
000B F500        R     MOV     e,A
                                           ; SOURCE LINE # 52
000D C3                CLR     C
000E E500        R     MOV     A,e+01H
0010 9500        R     SUBB    A,e1+01H
0012 FD                MOV     R5,A
0013 E500        R     MOV     A,e
0015 9500        R     SUBB    A,e1
0017 FC                MOV     R4,A
0018 1100        E     ACALL   ?C?FCASTI
001A AB00        R     MOV     R3,Kp+03H
001C AA00        R     MOV     R2,Kp+02H
001E A900        R     MOV     R1,Kp+01H
0020 A800        R     MOV     R0,Kp
0022 1100        E     ACALL   ?C?FPMUL
0024 C004              PUSH    AR4
0026 C005              PUSH    AR5
0028 C006              PUSH    AR6
002A C007              PUSH    AR7
002C AC00        R     MOV     R4,e
002E AD00        R     MOV     R5,e+01H
0030 EC                MOV     A,R4
0031 1100        E     ACALL   ?C?FCASTI
0033 AB00        R     MOV     R3,Ki+03H
0035 AA00        R     MOV     R2,Ki+02H
0037 A900        R     MOV     R1,Ki+01H
0039 A800        R     MOV     R0,Ki
003B 1100        E     ACALL   ?C?FPMUL
003D D003              POP     AR3
003F D002              POP     AR2
0041 D001              POP     AR1
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 6   

0043 D000              POP     AR0
0045 1100        E     ACALL   ?C?FPADD
0047 C004              PUSH    AR4
0049 C005              PUSH    AR5
004B C006              PUSH    AR6
004D C007              PUSH    AR7
004F E500        R     MOV     A,e1+01H
0051 25E0              ADD     A,ACC
0053 FF                MOV     R7,A
0054 E500        R     MOV     A,e1
0056 33                RLC     A
0057 FE                MOV     R6,A
0058 C3                CLR     C
0059 E500        R     MOV     A,e+01H
005B 9F                SUBB    A,R7
005C CF                XCH     A,R7
005D E500        R     MOV     A,e
005F 9E                SUBB    A,R6
0060 CF                XCH     A,R7
0061 2500        R     ADD     A,e2+01H
0063 FD                MOV     R5,A
0064 EF                MOV     A,R7
0065 3500        R     ADDC    A,e2
0067 FC                MOV     R4,A
0068 1100        E     ACALL   ?C?FCASTI
006A AB00        R     MOV     R3,Kd+03H
006C AA00        R     MOV     R2,Kd+02H
006E A900        R     MOV     R1,Kd+01H
0070 A800        R     MOV     R0,Kd
0072 1100        E     ACALL   ?C?FPMUL
0074 D003              POP     AR3
0076 D002              POP     AR2
0078 D001              POP     AR1
007A D000              POP     AR0
007C 1100        E     ACALL   ?C?FPADD
007E E4                CLR     A
007F FB                MOV     R3,A
0080 FA                MOV     R2,A
0081 7948              MOV     R1,#048H
0083 7842              MOV     R0,#042H
0085 1100        E     ACALL   ?C?FPDIV
0087 8F00        R     MOV     duk+03H,R7
0089 8E00        R     MOV     duk+02H,R6
008B 8D00        R     MOV     duk+01H,R5
008D 8C00        R     MOV     duk,R4
                                           ; SOURCE LINE # 53
008F AB00        R     MOV     R3,uk1+03H
0091 AA00        R     MOV     R2,uk1+02H
0093 A900        R     MOV     R1,uk1+01H
0095 A800        R     MOV     R0,uk1
0097 1100        E     ACALL   ?C?FPADD
0099 8F00        R     MOV     uk+03H,R7
009B 8E00        R     MOV     uk+02H,R6
009D 8D00        R     MOV     uk+01H,R5
009F 8C00        R     MOV     uk,R4
                                           ; SOURCE LINE # 54
00A1 1100        E     ACALL   ?C?CASTF
00A3 8E00        R     MOV     out,R6
00A5 8F00        R     MOV     out+01H,R7
                                           ; SOURCE LINE # 55
00A7 D3                SETB    C
00A8 E500        R     MOV     A,out+01H
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 7   

00AA 94E8              SUBB    A,#0E8H
00AC E500        R     MOV     A,out
00AE 6480              XRL     A,#080H
00B0 9483              SUBB    A,#083H
00B2 4008              JC      ?C0004
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
00B4 750003      R     MOV     out,#03H
00B7 7500E8      R     MOV     out+01H,#0E8H
                                           ; SOURCE LINE # 58
00BA 800E              SJMP    ?C0005
00BC         ?C0004:
                                           ; SOURCE LINE # 59
00BC C3                CLR     C
00BD E500        R     MOV     A,out
00BF 6480              XRL     A,#080H
00C1 9480              SUBB    A,#080H
00C3 5005              JNC     ?C0005
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
00C5 E4                CLR     A
00C6 F500        R     MOV     out,A
00C8 F500        R     MOV     out+01H,A
                                           ; SOURCE LINE # 62
00CA         ?C0005:
                                           ; SOURCE LINE # 63
00CA 850000      R     MOV     uk1+03H,uk+03H
00CD 850000      R     MOV     uk1+02H,uk+02H
00D0 850000      R     MOV     uk1+01H,uk+01H
00D3 850000      R     MOV     uk1,uk
                                           ; SOURCE LINE # 64
00D6 850000      R     MOV     e2,e1
00D9 850000      R     MOV     e2+01H,e1+01H
                                           ; SOURCE LINE # 65
00DC 850000      R     MOV     e1,e
00DF 850000      R     MOV     e1+01H,e+01H
                                           ; SOURCE LINE # 66
00E2 850000      R     MOV     PWMTime,out
00E5 850000      R     MOV     PWMTime+01H,out+01H
                                           ; SOURCE LINE # 67
00E8 22                RET     
             ; FUNCTION PIDControl (END)

             ; FUNCTION _delay (BEGIN)
                                           ; SOURCE LINE # 69
;---- Variable 'x' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 72
0000 7E00              MOV     R6,#00H
;---- Variable 'i' assigned to Register 'R6/R7' ----
0002         ?C0008:
0002 D3                SETB    C
0003 EF                MOV     A,R7
0004 9400              SUBB    A,#00H
0006 EE                MOV     A,R6
0007 9400              SUBB    A,#00H
0009 4014              JC      ?C0014
                                           ; SOURCE LINE # 73
;---- Variable 'j' assigned to Register 'R4/R5' ----
000B 7D32              MOV     R5,#032H
000D 7C00              MOV     R4,#00H
000F         ?C0011:
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 8   

000F ED                MOV     A,R5
0010 1D                DEC     R5
0011 7001              JNZ     ?C0054
0013 1C                DEC     R4
0014         ?C0054:
0014 ED                MOV     A,R5
0015 4C                ORL     A,R4
0016 70F7              JNZ     ?C0011
0018         ?C0010:
0018 EF                MOV     A,R7
0019 1F                DEC     R7
001A 70E6              JNZ     ?C0008
001C 1E                DEC     R6
001D         ?C0055:
001D 80E3              SJMP    ?C0008
                                           ; SOURCE LINE # 74
001F         ?C0014:
001F 22                RET     
             ; FUNCTION _delay (END)

             ; FUNCTION PWMOUT (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0000 C3                CLR     C
0001 E500        R     MOV     A,cnt+01H
0003 9500        R     SUBB    A,PWMTime+01H
0005 E500        R     MOV     A,cnt
0007 9500        R     SUBB    A,PWMTime
0009 5004              JNC     ?C0015
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
000B D290              SETB    PWM_FC
                                           ; SOURCE LINE # 81
000D 8002              SJMP    ?C0016
000F         ?C0015:
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
000F C290              CLR     PWM_FC
                                           ; SOURCE LINE # 85
0011         ?C0016:
                                           ; SOURCE LINE # 86
0011 D3                SETB    C
0012 E500        R     MOV     A,cnt+01H
0014 94E8              SUBB    A,#0E8H
0016 E500        R     MOV     A,cnt
0018 9403              SUBB    A,#03H
001A 4005              JC      ?C0018
001C E4                CLR     A
001D F500        R     MOV     cnt,A
001F F500        R     MOV     cnt+01H,A
                                           ; SOURCE LINE # 87
0021         ?C0018:
0021 22                RET     
             ; FUNCTION PWMOUT (END)

             ; FUNCTION SystemInit (BEGIN)
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0000 758921            MOV     TMOD,#021H
                                           ; SOURCE LINE # 91
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 9   

0003 758CF9            MOV     TH0,#0F9H
                                           ; SOURCE LINE # 92
0006 758A0F            MOV     TL0,#0FH
                                           ; SOURCE LINE # 93
0009 758DC0            MOV     TH1,#0C0H
                                           ; SOURCE LINE # 94
000C 758BC0            MOV     TL1,#0C0H
                                           ; SOURCE LINE # 95
000F D2AB              SETB    ET1
                                           ; SOURCE LINE # 96
0011 D2A9              SETB    ET0
                                           ; SOURCE LINE # 97
0013 D28C              SETB    TR0
                                           ; SOURCE LINE # 98
0015 D28E              SETB    TR1
                                           ; SOURCE LINE # 99
0017 D2A8              SETB    EX0
                                           ; SOURCE LINE # 100
0019 D288              SETB    IT0
                                           ; SOURCE LINE # 101
001B D2AF              SETB    EA
                                           ; SOURCE LINE # 102
001D E4                CLR     A
001E F500        R     MOV     e,A
0020 F500        R     MOV     e+01H,A
                                           ; SOURCE LINE # 103
0022 F500        R     MOV     e1,A
0024 F500        R     MOV     e1+01H,A
                                           ; SOURCE LINE # 104
0026 F500        R     MOV     e2,A
0028 F500        R     MOV     e2+01H,A
                                           ; SOURCE LINE # 105
002A D2B0              SETB    IN1
                                           ; SOURCE LINE # 106
002C C2B1              CLR     IN2
                                           ; SOURCE LINE # 107
002E 22                RET     
             ; FUNCTION SystemInit (END)

             ; FUNCTION SetSpeed (BEGIN)
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
0000 209123            JB      AddSpeed,?C0020
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
0003 7FC8              MOV     R7,#0C8H
0005 1100        R     ACALL   _delay
                                           ; SOURCE LINE # 113
0007 20911C            JB      AddSpeed,?C0020
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
000A 740A              MOV     A,#0AH
000C 2500        R     ADD     A,SpeedSet+01H
000E F500        R     MOV     SpeedSet+01H,A
0010 E4                CLR     A
0011 3500        R     ADDC    A,SpeedSet
0013 F500        R     MOV     SpeedSet,A
                                           ; SOURCE LINE # 116
0015 D3                SETB    C
0016 E500        R     MOV     A,SpeedSet+01H
0018 94DC              SUBB    A,#0DCH
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 10  

001A E500        R     MOV     A,SpeedSet
001C 9405              SUBB    A,#05H
001E 4006              JC      ?C0020
                                           ; SOURCE LINE # 117
                                           ; SOURCE LINE # 118
0020 750005      R     MOV     SpeedSet,#05H
0023 7500DC      R     MOV     SpeedSet+01H,#0DCH
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
0026         ?C0020:
                                           ; SOURCE LINE # 122
0026 20921D            JB      SubSpeed,?C0023
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
0029 7FC8              MOV     R7,#0C8H
002B 1100        R     ACALL   _delay
                                           ; SOURCE LINE # 125
002D 209216            JB      SubSpeed,?C0023
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
0030 74F6              MOV     A,#0F6H
0032 2500        R     ADD     A,SpeedSet+01H
0034 F500        R     MOV     SpeedSet+01H,A
0036 74FF              MOV     A,#0FFH
0038 3500        R     ADDC    A,SpeedSet
003A F500        R     MOV     SpeedSet,A
                                           ; SOURCE LINE # 128
003C C3                CLR     C
003D 9400              SUBB    A,#00H
003F 5005              JNC     ?C0023
0041 E4                CLR     A
0042 F500        R     MOV     SpeedSet,A
0044 F500        R     MOV     SpeedSet+01H,A
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
0046         ?C0023:
                                           ; SOURCE LINE # 131
0046 20930E            JB      TurnForward,?C0026
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
0049 7FC8              MOV     R7,#0C8H
004B 1100        R     ACALL   _delay
                                           ; SOURCE LINE # 134
004D 209307            JB      TurnForward,?C0026
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0050 D2B0              SETB    IN1
                                           ; SOURCE LINE # 137
0052 C2B1              CLR     IN2
0054         ?C0028:
                                           ; SOURCE LINE # 138
0054 3093FD            JNB     TurnForward,?C0028
                                           ; SOURCE LINE # 139
                                           ; SOURCE LINE # 140
0057         ?C0026:
                                           ; SOURCE LINE # 141
0057 20940E            JB      TurnBackward,?C0030
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
005A 7FC8              MOV     R7,#0C8H
005C 1100        R     ACALL   _delay
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 11  

                                           ; SOURCE LINE # 144
005E 209407            JB      TurnBackward,?C0030
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
0061 C2B0              CLR     IN1
                                           ; SOURCE LINE # 147
0063 D2B1              SETB    IN2
0065         ?C0032:
                                           ; SOURCE LINE # 148
0065 3094FD            JNB     TurnBackward,?C0032
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
0068         ?C0030:
                                           ; SOURCE LINE # 151
0068 20950E            JB      Stop,?C0038
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
006B 7FC8              MOV     R7,#0C8H
006D 1100        R     ACALL   _delay
                                           ; SOURCE LINE # 154
006F 209507            JB      Stop,?C0038
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
0072 D2B0              SETB    IN1
                                           ; SOURCE LINE # 157
0074 D2B1              SETB    IN2
0076         ?C0036:
                                           ; SOURCE LINE # 158
0076 3095FD            JNB     Stop,?C0036
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
                                           ; SOURCE LINE # 162
0079         ?C0038:
0079 22                RET     
             ; FUNCTION SetSpeed (END)

             ; FUNCTION SegRefre (BEGIN)
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
0000 AE00        R     MOV     R6,SpeedSet
0002 AF00        R     MOV     R7,SpeedSet+01H
0004 7C03              MOV     R4,#03H
0006 7DE8              MOV     R5,#0E8H
0008 1100        E     ACALL   ?C?UIDIV
000A 8F00        R     MOV     Data_Buffer,R7
                                           ; SOURCE LINE # 166
000C AE00        R     MOV     R6,SpeedSet
000E AF00        R     MOV     R7,SpeedSet+01H
0010 7C03              MOV     R4,#03H
0012 7DE8              MOV     R5,#0E8H
0014 1100        E     ACALL   ?C?UIDIV
0016 7E00              MOV     R6,#00H
0018 7F64              MOV     R7,#064H
001A CF                XCH     A,R7
001B CD                XCH     A,R5
001C CF                XCH     A,R7
001D CE                XCH     A,R6
001E CC                XCH     A,R4
001F CE                XCH     A,R6
0020 1100        E     ACALL   ?C?UIDIV
0022 8F00        R     MOV     Data_Buffer+01H,R7
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 12  

                                           ; SOURCE LINE # 167
0024 AE00        R     MOV     R6,SpeedSet
0026 AF00        R     MOV     R7,SpeedSet+01H
0028 7C00              MOV     R4,#00H
002A 7D64              MOV     R5,#064H
002C 1100        E     ACALL   ?C?UIDIV
002E 7E00              MOV     R6,#00H
0030 7F0A              MOV     R7,#0AH
0032 CF                XCH     A,R7
0033 CD                XCH     A,R5
0034 CF                XCH     A,R7
0035 CE                XCH     A,R6
0036 CC                XCH     A,R4
0037 CE                XCH     A,R6
0038 1100        E     ACALL   ?C?UIDIV
003A 8F00        R     MOV     Data_Buffer+02H,R7
                                           ; SOURCE LINE # 168
003C AE00        R     MOV     R6,SpeedSet
003E AF00        R     MOV     R7,SpeedSet+01H
0040 7C00              MOV     R4,#00H
0042 7D0A              MOV     R5,#0AH
0044 1100        E     ACALL   ?C?UIDIV
0046 8D00        R     MOV     Data_Buffer+03H,R5
                                           ; SOURCE LINE # 169
0048 AE00        R     MOV     R6,num
004A AF00        R     MOV     R7,num+01H
004C 7C03              MOV     R4,#03H
004E 7DE8              MOV     R5,#0E8H
0050 1100        E     ACALL   ?C?UIDIV
0052 8F00        R     MOV     Data_Buffer+04H,R7
                                           ; SOURCE LINE # 170
0054 AE00        R     MOV     R6,num
0056 AF00        R     MOV     R7,num+01H
0058 7C03              MOV     R4,#03H
005A 7DE8              MOV     R5,#0E8H
005C 1100        E     ACALL   ?C?UIDIV
005E 7E00              MOV     R6,#00H
0060 7F64              MOV     R7,#064H
0062 CF                XCH     A,R7
0063 CD                XCH     A,R5
0064 CF                XCH     A,R7
0065 CE                XCH     A,R6
0066 CC                XCH     A,R4
0067 CE                XCH     A,R6
0068 1100        E     ACALL   ?C?UIDIV
006A 8F00        R     MOV     Data_Buffer+05H,R7
                                           ; SOURCE LINE # 171
006C AE00        R     MOV     R6,num
006E AF00        R     MOV     R7,num+01H
0070 7C00              MOV     R4,#00H
0072 7D64              MOV     R5,#064H
0074 1100        E     ACALL   ?C?UIDIV
0076 7E00              MOV     R6,#00H
0078 7F0A              MOV     R7,#0AH
007A CF                XCH     A,R7
007B CD                XCH     A,R5
007C CF                XCH     A,R7
007D CE                XCH     A,R6
007E CC                XCH     A,R4
007F CE                XCH     A,R6
0080 1100        E     ACALL   ?C?UIDIV
0082 8F00        R     MOV     Data_Buffer+06H,R7
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 13  

                                           ; SOURCE LINE # 172
0084 AE00        R     MOV     R6,num
0086 AF00        R     MOV     R7,num+01H
0088 7C00              MOV     R4,#00H
008A 7D0A              MOV     R5,#0AH
008C 1100        E     ACALL   ?C?UIDIV
008E 8D00        R     MOV     Data_Buffer+07H,R5
                                           ; SOURCE LINE # 173
0090 22                RET     
             ; FUNCTION SegRefre (END)

             ; FUNCTION int0 (BEGIN)
0000 C0E0              PUSH    ACC
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 177
0002 0500        R     INC     Inpluse+01H
0004 E500        R     MOV     A,Inpluse+01H
0006 7002              JNZ     ?C0056
0008 0500        R     INC     Inpluse
000A         ?C0056:
                                           ; SOURCE LINE # 178
000A D0E0              POP     ACC
000C 32                RETI    
             ; FUNCTION int0 (END)

             ; FUNCTION t0 (BEGIN)
0000 C0E0              PUSH    ACC
0002 C0F0              PUSH    B
0004 C083              PUSH    DPH
0006 C082              PUSH    DPL
0008 C0D0              PUSH    PSW
000A 75D000            MOV     PSW,#00H
000D C000              PUSH    AR0
000F C001              PUSH    AR1
0011 C002              PUSH    AR2
0013 C003              PUSH    AR3
0015 C004              PUSH    AR4
0017 C005              PUSH    AR5
0019 C006              PUSH    AR6
001B C007              PUSH    AR7
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 183
001D 758CF9            MOV     TH0,#0F9H
                                           ; SOURCE LINE # 184
0020 758A0F            MOV     TL0,#0FH
                                           ; SOURCE LINE # 187
0023 0500        R     INC     Bit
                                           ; SOURCE LINE # 188
0025 0500        R     INC     time+01H
0027 E500        R     MOV     A,time+01H
0029 7002              JNZ     ?C0057
002B 0500        R     INC     time
002D         ?C0057:
                                           ; SOURCE LINE # 189
002D E500        R     MOV     A,Bit
002F D3                SETB    C
0030 9408              SUBB    A,#08H
0032 4003              JC      ?C0041
0034 750000      R     MOV     Bit,#00H
0037         ?C0041:
                                           ; SOURCE LINE # 190
0037 7580FF            MOV     P0,#0FFH
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 14  

                                           ; SOURCE LINE # 191
003A 7400        R     MOV     A,#LOW Data_Buffer
003C 2500        R     ADD     A,Bit
003E F8                MOV     R0,A
003F E6                MOV     A,@R0
0040 900000      R     MOV     DPTR,#Duan
0043 93                MOVC    A,@A+DPTR
0044 F5A0              MOV     P2,A
                                           ; SOURCE LINE # 192
0046 E500        R     MOV     A,Bit
0048 B40800            CJNE    A,#08H,?C0058
004B         ?C0058:
004B 503C              JNC     ?C0042
004D 900000      R     MOV     DPTR,#?C0059
0050 25E0              ADD     A,ACC
0052 73                JMP     @A+DPTR
0053         ?C0059:
0053 0100        R     AJMP    ?C0043
0055 0100        R     AJMP    ?C0044
0057 0100        R     AJMP    ?C0045
0059 0100        R     AJMP    ?C0046
005B 0100        R     AJMP    ?C0047
005D 0100        R     AJMP    ?C0048
005F 0100        R     AJMP    ?C0049
0061 0100        R     AJMP    ?C0050
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0063         ?C0043:
0063 75807F            MOV     P0,#07FH
0066 8021              SJMP    ?C0042
                                           ; SOURCE LINE # 195
0068         ?C0044:
0068 7580BF            MOV     P0,#0BFH
006B 801C              SJMP    ?C0042
                                           ; SOURCE LINE # 196
006D         ?C0045:
006D 7580DF            MOV     P0,#0DFH
0070 8017              SJMP    ?C0042
                                           ; SOURCE LINE # 197
0072         ?C0046:
0072 7580EF            MOV     P0,#0EFH
0075 8012              SJMP    ?C0042
                                           ; SOURCE LINE # 198
0077         ?C0047:
0077 7580F7            MOV     P0,#0F7H
007A 800D              SJMP    ?C0042
                                           ; SOURCE LINE # 199
007C         ?C0048:
007C 7580FB            MOV     P0,#0FBH
007F 8008              SJMP    ?C0042
                                           ; SOURCE LINE # 200
0081         ?C0049:
0081 7580FD            MOV     P0,#0FDH
0084 8003              SJMP    ?C0042
                                           ; SOURCE LINE # 201
0086         ?C0050:
0086 7580FE            MOV     P0,#0FEH
                                           ; SOURCE LINE # 202
0089         ?C0042:
                                           ; SOURCE LINE # 203
0089 D3                SETB    C
008A E500        R     MOV     A,time+01H
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 15  

008C 9464              SUBB    A,#064H
008E E500        R     MOV     A,time
0090 9400              SUBB    A,#00H
0092 401C              JC      ?C0052
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
0094 750000      R     MOV     time,#00H
0097 750000      R     MOV     time+01H,#00H
                                           ; SOURCE LINE # 206
009A AE00        R     MOV     R6,Inpluse
009C AF00        R     MOV     R7,Inpluse+01H
009E 7C00              MOV     R4,#00H
00A0 7D05              MOV     R5,#05H
00A2 1100        E     ACALL   ?C?IMUL
00A4 8E00        R     MOV     num,R6
00A6 8F00        R     MOV     num+01H,R7
                                           ; SOURCE LINE # 207
00A8 750000      R     MOV     Inpluse,#00H
00AB 750000      R     MOV     Inpluse+01H,#00H
                                           ; SOURCE LINE # 208
00AE 1100        R     ACALL   PIDControl
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
00B0         ?C0052:
00B0 D007              POP     AR7
00B2 D006              POP     AR6
00B4 D005              POP     AR5
00B6 D004              POP     AR4
00B8 D003              POP     AR3
00BA D002              POP     AR2
00BC D001              POP     AR1
00BE D000              POP     AR0
00C0 D0D0              POP     PSW
00C2 D082              POP     DPL
00C4 D083              POP     DPH
00C6 D0F0              POP     B
00C8 D0E0              POP     ACC
00CA 32                RETI    
             ; FUNCTION t0 (END)

             ; FUNCTION timer_1 (BEGIN)
0000 C0E0              PUSH    ACC
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 213
0002 0500        R     INC     cnt+01H
0004 E500        R     MOV     A,cnt+01H
0006 7002              JNZ     ?C0060
0008 0500        R     INC     cnt
000A         ?C0060:
                                           ; SOURCE LINE # 214
000A D0E0              POP     ACC
000C 32                RETI    
             ; FUNCTION timer_1 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    852    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54    ----
C51 COMPILER V7.06   PID                                                                   10/20/2020 22:17:18 PAGE 16  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
